service: aws-serverless-api

plugins:
  - serverless-webpack
  - serverless-deployment-bucket
  - serverless-dynamodb-local
  - serverless-offline

package:
  individually: true
  patterns:
    - '!./**'

functions: ${file(resources/lambda-functions.yml)}

# Create resources with separate CloudFormation templates
resources: ${file(resources/resources.yml)}

custom:
  name: lambda-${self:provider.stage}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      packagePath: './package.json'
      forceInclude:
        - source-map-support
      forceExclude:
        - aws-sdk
  serverless-offline:
    httpPort: 3003
  region: ${self:provider.region}
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
    stages:
      - dev

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
